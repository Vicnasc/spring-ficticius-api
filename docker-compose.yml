version: '3.6'

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=totvs
      - POSTGRES_DB=totvs
    restart: on-failure
    volumes:
      - ./volumes/postgresql:/var/lib/postgresql/data:z
    ports: ['5432:5432']
    networks: ['ficticius']

  cars-api:
    container_name: cars-api
    image: alpine:latest
    working_dir: /usr/app
    ports: ['8080:8080']
    volumes: [./cars-api:/usr/app]
    entrypoint: 
      - sh
      - -c
      - apk add openjdk11 ca-certificates gradle && chmod +x . && gradle build && java -jar /usr/app/build/libs/cars-api-0.0.1-SNAPSHOT.jar
    depends_on: [postgres]
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/totvs
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=totvs
      # - SPRING_JPA_HIBERNATE_DDL_AUTO=create
      - logging.level.com.totvs.ficticius.carsapi=TRACE
      - logging.level.root=ERROR
      - logging.file.path=logs
    networks: [ficticius]

  consumption-api:
    container_name: consumption-api
    image: alpine:latest
    working_dir: /usr/app
    ports: ['8081:8081']
    volumes: [./consumption-api:/usr/app]
    entrypoint: 
      - sh
      - -c
      - apk add openjdk11 ca-certificates gradle && chmod +x . && gradle build && java -jar /usr/app/build/libs/consumption-api-0.0.1-SNAPSHOT.jar
    depends_on: [postgres]
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/totvs
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=totvs
      # - SPRING_JPA_HIBERNATE_DDL_AUTO=create
      - logging.level.com.totvs.ficticius.consumptionapi=TRACE
      - logging.level.root=ERROR
      - logging.file.path=logs
      - service.url=http://cars-api:8080/api/v1
    networks: ['ficticius']

networks:
  ficticius:
    driver: bridge
    # driver_opts:
    #   com.docker.network.bridge.enable_icc: "true"